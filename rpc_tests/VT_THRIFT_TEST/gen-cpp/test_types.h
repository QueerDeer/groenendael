/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef test_TYPES_H
#define test_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/TBase.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <thrift/cxxfunctional.h>




class file_content;

typedef struct _file_content__isset {
  _file_content__isset() : line(false) {}
  bool line :1;
} _file_content__isset;

class file_content : public virtual ::apache::thrift::TBase {
 public:

  file_content(const file_content&);
  file_content& operator=(const file_content&);
  file_content() : line() {
  }

  virtual ~file_content() throw();
  std::string line;

  _file_content__isset __isset;

  void __set_line(const std::string& val);

  bool operator == (const file_content & rhs) const
  {
    if (!(line == rhs.line))
      return false;
    return true;
  }
  bool operator != (const file_content &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const file_content & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

  virtual void printTo(std::ostream& out) const;
};

void swap(file_content &a, file_content &b);

inline std::ostream& operator<<(std::ostream& out, const file_content& obj)
{
  obj.printTo(out);
  return out;
}



#endif
